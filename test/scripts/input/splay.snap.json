{"meta":{"pubsub":"mqtt://localhost","code_name":"splay.js","instance_id":"Oy2DHSOS","timestamp":1560237468913,"extra":{}},"timers":{"15DWxRmu":{"id":"15DWxRmu","callback":"Σ/BM_Start-GB5TRJXu.doRun","timedelta":0,"called_at":1560237468896,"stopped_at":1560237468913,"type":"Immediate"}},"tree":{"name":"Σ","uri":"Σ","hoisted":["GeneratePayloadTree","GenerateKey","SplayRMS","SplayUpdateStats","InsertNewNode","SplaySetup","SplayTearDown","SplayRun","SplayTree","BM_Start"],"funcs":{"GeneratePayloadTree":{"type":"Function","value":"function GeneratePayloadTree(depth, tag) {\n        var Σ_GeneratePayloadTree = new Σ.Scope(this, Σ, GeneratePayloadTree, function () {\n            return [\n                {\n                    depth: depth,\n                    tag: tag\n                },\n                {}\n            ];\n        });\n        if (depth == 0) {\n            return {\n                array: [\n                    0,\n                    1,\n                    2,\n                    3,\n                    4,\n                    5,\n                    6,\n                    7,\n                    8,\n                    9\n                ],\n                string: 'String for key ' + tag + ' in leaf node'\n            };\n        } else {\n            return {\n                left: GeneratePayloadTree(depth - 1, tag),\n                right: GeneratePayloadTree(depth - 1, tag)\n            };\n        }\n    }","context":"Σ","proto":{},"properties":{}},"GenerateKey":{"type":"Function","value":"function GenerateKey() {\n        return Math.random();\n    }","context":"Σ","proto":{},"properties":{}},"SplayRMS":{"type":"Function","value":"function SplayRMS() {\n        return Math.round(Math.sqrt(splaySumOfSquaredPauses / splaySamples) * 10000);\n    }","context":"Σ","proto":{},"properties":{}},"SplayUpdateStats":{"type":"Function","value":"function SplayUpdateStats(time) {\n        var Σ_SplayUpdateStats = new Σ.Scope(this, Σ, SplayUpdateStats, function () {\n            return [\n                { time: time },\n                { pause: pause }\n            ];\n        });\n        var pause = time - splaySampleTimeStart;\n        splaySampleTimeStart = time;\n        splaySamples++;\n        splaySumOfSquaredPauses += pause * pause;\n    }","context":"Σ","proto":{},"properties":{}},"InsertNewNode":{"type":"Function","value":"function InsertNewNode() {\n        var Σ_InsertNewNode = new Σ.Scope(this, Σ, InsertNewNode, function () {\n            return [\n                {},\n                {\n                    key: key,\n                    payload: payload\n                }\n            ];\n        });\n        var key;\n        do {\n            key = GenerateKey();\n        } while (splayTree.find(key) != null);\n        var payload = GeneratePayloadTree(kSplayTreePayloadDepth, String(key));\n        splayTree.insert(key, payload);\n        return key;\n    }","context":"Σ","proto":{},"properties":{}},"SplaySetup":{"type":"Function","value":"function SplaySetup() {\n        var Σ_SplaySetup = new Σ.Scope(this, Σ, SplaySetup, function () {\n            return [\n                {},\n                {}\n            ];\n        });\n        if (!performance.now) {\n            throw 'PerformanceNowUnsupported';\n        }\n        splayTree = new SplayTree();\n        splaySampleTimeStart = performance.now();\n        for (var i = 0; i < kSplayTreeSize; i++) {\n            InsertNewNode();\n            if ((i + 1) % 20 == 19) {\n                SplayUpdateStats(performance.now());\n            }\n        }\n    }","context":"Σ","proto":{},"properties":{}},"SplayTearDown":{"type":"Function","value":"function SplayTearDown() {\n        var Σ_SplayTearDown = new Σ.Scope(this, Σ, SplayTearDown, function () {\n            return [\n                {},\n                {\n                    keys: keys,\n                    length: length\n                }\n            ];\n        });\n        var keys = splayTree.exportKeys();\n        splayTree = null;\n        splaySamples = 0;\n        splaySumOfSquaredPauses = 0;\n        var length = keys.length;\n        if (length != kSplayTreeSize) {\n            throw new Error('Splay tree has wrong size');\n        }\n        for (var i = 0; i < length - 1; i++) {\n            if (keys[i] >= keys[i + 1]) {\n                throw new Error('Splay tree not sorted');\n            }\n        }\n    }","context":"Σ","proto":{},"properties":{}},"SplayRun":{"type":"Function","value":"function SplayRun() {\n        var Σ_SplayRun = new Σ.Scope(this, Σ, SplayRun, function () {\n            return [\n                {},\n                {}\n            ];\n        });\n        for (var i = 0; i < kSplayTreeModifications; i++) {\n            var key = InsertNewNode();\n            var greatest = splayTree.findGreatestLessThan(key);\n            if (greatest == null) {\n                splayTree.remove(key);\n            } else {\n                splayTree.remove(greatest.key);\n            }\n            ;\n        }\n        SplayUpdateStats(performance.now());\n    }","context":"Σ","proto":{},"properties":{}},"SplayTree":{"type":"Function","value":"function SplayTree() {\n    }","context":"Σ","proto":{"root_":null,"isEmpty":{"type":"Function","value":"Σ.αUGwI-BiTwPBej"},"insert":{"type":"Function","value":"Σ.α0wUE-tcTZQGWd"},"remove":{"type":"Function","value":"Σ.αVFgF-3vbArvoH"},"find":{"type":"Function","value":"Σ.αgzvP-BRbBtJ78"},"findMax":{"type":"Function","value":"Σ.αdz6D-e5oMBE67"},"findGreatestLessThan":{"type":"Function","value":"Σ.αdbkc-VZsouMME"},"exportKeys":{"type":"Function","value":"Σ.αB5uI-kZJqGpgo"},"splay_":{"type":"Function","value":"Σ.αXZTJ-eXMwFx8V"}},"properties":{"Node":{"type":"Function","value":"Σ.αQFhb-QcXgcsFO"}}},"BM_Start":{"type":"Function","value":"function BM_Start() {\n        var Σ_BM_Start = new Σ.Scope(this, Σ, BM_Start, function () {\n            return [\n                {},\n                {\n                    data: data,\n                    elapsed: elapsed,\n                    start: start,\n                    end: end,\n                    i: i\n                }\n            ];\n        }).hoist(doRun, Σ_BM_Start);\n        var data = {\n            runs: 0,\n            elapsed: 0\n        };\n        var elapsed = 0;\n        var start = Date.now();\n        var end = null;\n        var i = 0;\n        function doRun() {\n            var Σ_BM_Start_doRun = new Σ.Scope(this, Σ_BM_Start, doRun, function () {\n                return [\n                    {},\n                    {}\n                ];\n            });\n            BM_SetupFunc();\n            Σ.console.log('Iteration : ' + i);\n            BM_RunFunc();\n            elapsed = Date.now() - start;\n            BM_TearDownFunc();\n            i++;\n            if (i < BM_Iterations) {\n                if (i === BM_Iterations / 2){\n                    Σ.pauseTimers();\n                    var started = Date.now();\n                    var safe = Σ.snapshot();\n                    var elapsed = Date.now() - started;\n                    process.send({ time_taken: elapsed, snapshot: safe });\n                }\n                else Σ.setImmediate(doRun);\n            } else {\n                if (data != null) {\n                    data.runs += i;\n                    data.elapsed += elapsed;\n                }\n                Σ.console.log('Runs: ' + data.runs + '\\t|\\tElapsed: ' + data.elapsed);\n                end = Date.now();\n                Σ.console.log('Total time : ' + (end - start) + ' ms');\n                var usec = data.elapsed * 1000 / data.runs;\n                var rms = BM_RMS ? BM_RMS() : 0;\n                BM_Results.push({\n                    time: usec,\n                    latency: rms\n                });\n                process.exit();\n            }\n        }\n        Σ.setImmediate(doRun);\n    }","context":"Σ","proto":{},"properties":{}},"αUGwI-BiTwPBej":{"type":"Function","value":"function αUGwI() {\n        return !this.root_;\n    }","context":"Σ","proto":{},"properties":{}},"α0wUE-tcTZQGWd":{"type":"Function","value":"function α0wUE(key, value) {\n        var Σ_α0wUE = new Σ.Scope(this, Σ, α0wUE, function () {\n            return [\n                {\n                    key: key,\n                    value: value\n                },\n                { node: node }\n            ];\n        });\n        if (this.isEmpty()) {\n            this.root_ = new SplayTree.Node(key, value);\n            return;\n        }\n        this.splay_(key);\n        if (this.root_.key == key) {\n            return;\n        }\n        var node = new SplayTree.Node(key, value);\n        if (key > this.root_.key) {\n            node.left = this.root_;\n            node.right = this.root_.right;\n            this.root_.right = null;\n        } else {\n            node.right = this.root_;\n            node.left = this.root_.left;\n            this.root_.left = null;\n        }\n        this.root_ = node;\n    }","context":"Σ","proto":{},"properties":{}},"αVFgF-3vbArvoH":{"type":"Function","value":"function αVFgF(key) {\n        var Σ_αVFgF = new Σ.Scope(this, Σ, αVFgF, function () {\n            return [\n                { key: key },\n                { removed: removed }\n            ];\n        });\n        if (this.isEmpty()) {\n            throw Error('Key not found: ' + key);\n        }\n        this.splay_(key);\n        if (this.root_.key != key) {\n            throw Error('Key not found: ' + key);\n        }\n        var removed = this.root_;\n        if (!this.root_.left) {\n            this.root_ = this.root_.right;\n        } else {\n            var right = this.root_.right;\n            this.root_ = this.root_.left;\n            this.splay_(key);\n            this.root_.right = right;\n        }\n        return removed;\n    }","context":"Σ","proto":{},"properties":{}},"αgzvP-BRbBtJ78":{"type":"Function","value":"function αgzvP(key) {\n        var Σ_αgzvP = new Σ.Scope(this, Σ, αgzvP, function () {\n            return [\n                { key: key },\n                {}\n            ];\n        });\n        if (this.isEmpty()) {\n            return null;\n        }\n        this.splay_(key);\n        return this.root_.key == key ? this.root_ : null;\n    }","context":"Σ","proto":{},"properties":{}},"αdz6D-e5oMBE67":{"type":"Function","value":"function αdz6D(opt_startNode) {\n        var Σ_αdz6D = new Σ.Scope(this, Σ, αdz6D, function () {\n            return [\n                { opt_startNode: opt_startNode },\n                { current: current }\n            ];\n        });\n        if (this.isEmpty()) {\n            return null;\n        }\n        var current = opt_startNode || this.root_;\n        while (current.right) {\n            current = current.right;\n        }\n        return current;\n    }","context":"Σ","proto":{},"properties":{}},"αdbkc-VZsouMME":{"type":"Function","value":"function αdbkc(key) {\n        var Σ_αdbkc = new Σ.Scope(this, Σ, αdbkc, function () {\n            return [\n                { key: key },\n                {}\n            ];\n        });\n        if (this.isEmpty()) {\n            return null;\n        }\n        this.splay_(key);\n        if (this.root_.key < key) {\n            return this.root_;\n        } else if (this.root_.left) {\n            return this.findMax(this.root_.left);\n        } else {\n            return null;\n        }\n    }","context":"Σ","proto":{},"properties":{}},"αB5uI-kZJqGpgo":{"type":"Function","value":"function αB5uI() {\n        var Σ_αB5uI = new Σ.Scope(this, Σ, αB5uI, function () {\n            return [\n                {},\n                { result: result }\n            ];\n        });\n        var result = [];\n        if (!this.isEmpty()) {\n            this.root_.traverse_(Σ_αB5uI.addFunction(function αMb6V(node) {\n                var Σ_αB5uI_αMb6V = new Σ.Scope(this, Σ_αB5uI, αMb6V, function () {\n                    return [\n                        { node: node },\n                        {}\n                    ];\n                });\n                result.push(node.key);\n            }, Σ_αB5uI));\n        }\n        return result;\n    }","context":"Σ","proto":{},"properties":{}},"αXZTJ-eXMwFx8V":{"type":"Function","value":"function αXZTJ(key) {\n        var Σ_αXZTJ = new Σ.Scope(this, Σ, αXZTJ, function () {\n            return [\n                { key: key },\n                {\n                    dummy: dummy,\n                    left: left,\n                    right: right,\n                    current: current\n                }\n            ];\n        });\n        if (this.isEmpty()) {\n            return;\n        }\n        var dummy, left, right;\n        dummy = left = right = new SplayTree.Node(null, null);\n        var current = this.root_;\n        while (true) {\n            if (key < current.key) {\n                if (!current.left) {\n                    break;\n                }\n                if (key < current.left.key) {\n                    var tmp = current.left;\n                    current.left = tmp.right;\n                    tmp.right = current;\n                    current = tmp;\n                    if (!current.left) {\n                        break;\n                    }\n                }\n                right.left = current;\n                right = current;\n                current = current.left;\n            } else if (key > current.key) {\n                if (!current.right) {\n                    break;\n                }\n                if (key > current.right.key) {\n                    var tmp = current.right;\n                    current.right = tmp.left;\n                    tmp.left = current;\n                    current = tmp;\n                    if (!current.right) {\n                        break;\n                    }\n                }\n                left.right = current;\n                left = current;\n                current = current.right;\n            } else {\n                break;\n            }\n        }\n        left.right = current.left;\n        right.left = current.right;\n        current.left = dummy.right;\n        current.right = dummy.left;\n        this.root_ = current;\n    }","context":"Σ","proto":{},"properties":{}},"αQFhb-QcXgcsFO":{"type":"Function","value":"function αQFhb(key, value) {\n        var Σ_αQFhb = new Σ.Scope(this, Σ, αQFhb, function () {\n            return [\n                {\n                    key: key,\n                    value: value\n                },\n                {}\n            ];\n        });\n        this.key = key;\n        this.value = value;\n    }","context":"Σ","proto":{"left":null,"right":null,"traverse_":{"type":"Function","value":"Σ.αgqkY-xNv6DfVk"}},"properties":{}},"αgqkY-xNv6DfVk":{"type":"Function","value":"function αgqkY(f) {\n        var Σ_αgqkY = new Σ.Scope(this, Σ, αgqkY, function () {\n            return [\n                { f: f },\n                { current: current }\n            ];\n        });\n        var current = this;\n        while (current) {\n            var left = current.left;\n            if (left) {\n                left.traverse_(f);\n            }\n            f(current);\n            current = current.right;\n        }\n    }","context":"Σ","proto":{},"properties":{}},"αAvNS-5AhInnbc":{"type":"Function","value":"function αAvNS() {\n        return Date.now();\n    }","context":"Σ","proto":{},"properties":{}}},"params":{},"refs":{"kSplayTreeSize":1000,"kSplayTreeModifications":10,"kSplayTreePayloadDepth":3,"splayTree":null,"splaySampleTimeStart":1560237468912,"splaySamples":0,"splaySumOfSquaredPauses":0,"performance":{"type":"Object","value":{"now":{"type":"Function","value":"Σ.αAvNS-5AhInnbc"}}},"BM_RunFunc":{"type":"Function","value":"Σ.SplayRun"},"BM_SetupFunc":{"type":"Function","value":"Σ.SplaySetup"},"BM_TearDownFunc":{"type":"Function","value":"Σ.SplayTearDown"},"BM_RMS":{"type":"Function","value":"Σ.SplayRMS"},"BM_Iterations":300,"BM_Min_Iterations":16,"BM_Results":[]},"children":{"BM_Start-GB5TRJXu":{"name":"BM_Start","uri":"Σ/BM_Start-GB5TRJXu","hoisted":["doRun"],"funcs":{"doRun":{"type":"Function","value":"function doRun() {\n            var Σ_BM_Start_doRun = new Σ.Scope(this, Σ_BM_Start, doRun, function () {\n                return [\n                    {},\n                    {}\n                ];\n            });\n            BM_SetupFunc();\n            Σ.console.log('Iteration : ' + i);\n            BM_RunFunc();\n            elapsed = Date.now() - start;\n            BM_TearDownFunc();\n            i++;\n            if (i < BM_Iterations) {\n                if (i === BM_Iterations / 2){\n                    Σ.pauseTimers();\n                    var started = Date.now();\n                    var safe = Σ.snapshot();\n                    var elapsed = Date.now() - started;\n                    process.send({ time_taken: elapsed, snapshot: safe });\n                }\n                else Σ.setImmediate(doRun);\n            } else {\n                if (data != null) {\n                    data.runs += i;\n                    data.elapsed += elapsed;\n                }\n                Σ.console.log('Runs: ' + data.runs + '\\t|\\tElapsed: ' + data.elapsed);\n                end = Date.now();\n                Σ.console.log('Total time : ' + (end - start) + ' ms');\n                var usec = data.elapsed * 1000 / data.runs;\n                var rms = BM_RMS ? BM_RMS() : 0;\n                BM_Results.push({\n                    time: usec,\n                    latency: rms\n                });\n                process.exit();\n            }\n        }","context":"Σ_BM_Start","proto":{},"properties":{}}},"params":{},"refs":{"data":{"type":"Object","value":{"runs":0,"elapsed":0}},"elapsed":0,"start":1560237466807,"end":null,"i":150},"children":{},"depth":1}},"depth":2}}