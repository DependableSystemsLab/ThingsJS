{
    "meta": {
        "pubsub": "mqtt://localhost",
        "code_name": "navier-stokes.js"
    },
    "timers": {
        "cgjCxhOo": {
            "id": "cgjCxhOo",
            "type": "Immediate",
            "callback": "Σ/BM_Start_4Zh2/doRun",
            "timedelta": 0,
            "called_at": 1523336793960,
            "stopped_at": 1523336793961
        }
    },
    "id": "Σ",
    "uid": "Σ",
    "func_name": "root",
    "params": {},
    "hoisted": {
        "runNavierStokes": "runNavierStokes",
        "checkResult": "checkResult",
        "voidFunc": "voidFunc",
        "setupNavierStokes": "setupNavierStokes",
        "tearDownNavierStokes": "tearDownNavierStokes",
        "addPoints": "addPoints",
        "prepareFrame": "prepareFrame",
        "FluidField": "FluidField",
        "BM_Start": "BM_Start"
    },
    "funcs": {
        "runNavierStokes": {
            "type": "Function",
            "value": "function runNavierStokes() {\n        var Σ_runNavierStokes = new Σ.Scope(this, runNavierStokes, 'runNavierStokes', Σ, {}, []);\n        Σ.refs.solver.update();\n        Σ.refs.nsFrameCounter++;\n        if (Σ.refs.nsFrameCounter == 15) {\n            Σ.refs.checkResult(Σ.refs.solver.getDens());\n        }\n    }",
            "proto": {
                "type": "runNavierStokes",
                "proto_uri": "Σ/runNavierStokes",
                "value": {}
            },
            "properties": {}
        },
        "checkResult": {
            "type": "Function",
            "value": "function checkResult(dens) {\n        var Σ_checkResult = new Σ.Scope(this, checkResult, 'checkResult', Σ, { dens: dens }, []);\n        this.result = 0;\n        for (Σ_checkResult.refs.i = 7000; Σ_checkResult.refs.i < 7100; Σ_checkResult.refs.i++) {\n            this.result += ~~(Σ_checkResult.refs.dens[Σ_checkResult.refs.i] * 10);\n        }\n        if (this.result != 77) {\n            throw new Error('checksum failed');\n        }\n    }",
            "proto": {
                "type": "checkResult",
                "proto_uri": "Σ/checkResult",
                "value": {}
            },
            "properties": {}
        },
        "voidFunc": {
            "type": "Function",
            "value": "function voidFunc() {\n        var Σ_voidFunc = new Σ.Scope(this, voidFunc, 'voidFunc', Σ, {}, []);\n    }",
            "proto": {
                "type": "voidFunc",
                "proto_uri": "Σ/voidFunc",
                "value": {}
            },
            "properties": {}
        },
        "setupNavierStokes": {
            "type": "Function",
            "value": "function setupNavierStokes() {\n        var Σ_setupNavierStokes = new Σ.Scope(this, setupNavierStokes, 'setupNavierStokes', Σ, {}, []);\n        Σ.refs.solver = new Σ.refs.FluidField(null);\n        Σ.refs.solver.setResolution(128, 128);\n        Σ.refs.solver.setIterations(20);\n        Σ.refs.solver.setDisplayFunction(Σ.refs.voidFunc);\n        Σ.refs.solver.setUICallback(Σ.refs.prepareFrame);\n        Σ.refs.solver.reset();\n    }",
            "proto": {
                "type": "setupNavierStokes",
                "proto_uri": "Σ/setupNavierStokes",
                "value": {}
            },
            "properties": {}
        },
        "tearDownNavierStokes": {
            "type": "Function",
            "value": "function tearDownNavierStokes() {\n        var Σ_tearDownNavierStokes = new Σ.Scope(this, tearDownNavierStokes, 'tearDownNavierStokes', Σ, {}, []);\n        Σ.refs.solver = null;\n    }",
            "proto": {
                "type": "tearDownNavierStokes",
                "proto_uri": "Σ/tearDownNavierStokes",
                "value": {}
            },
            "properties": {}
        },
        "addPoints": {
            "type": "Function",
            "value": "function addPoints(field) {\n        var Σ_addPoints = new Σ.Scope(this, addPoints, 'addPoints', Σ, { field: field }, []);\n        Σ_addPoints.refs.n = 64;\n        for (Σ_addPoints.refs.i = 1; Σ_addPoints.refs.i <= Σ_addPoints.refs.n; Σ_addPoints.refs.i++) {\n            Σ_addPoints.refs.field.setVelocity(Σ_addPoints.refs.i, Σ_addPoints.refs.i, Σ_addPoints.refs.n, Σ_addPoints.refs.n);\n            Σ_addPoints.refs.field.setDensity(Σ_addPoints.refs.i, Σ_addPoints.refs.i, 5);\n            Σ_addPoints.refs.field.setVelocity(Σ_addPoints.refs.i, Σ_addPoints.refs.n - Σ_addPoints.refs.i, -Σ_addPoints.refs.n, -Σ_addPoints.refs.n);\n            Σ_addPoints.refs.field.setDensity(Σ_addPoints.refs.i, Σ_addPoints.refs.n - Σ_addPoints.refs.i, 20);\n            Σ_addPoints.refs.field.setVelocity(128 - Σ_addPoints.refs.i, Σ_addPoints.refs.n + Σ_addPoints.refs.i, -Σ_addPoints.refs.n, -Σ_addPoints.refs.n);\n            Σ_addPoints.refs.field.setDensity(128 - Σ_addPoints.refs.i, Σ_addPoints.refs.n + Σ_addPoints.refs.i, 30);\n        }\n    }",
            "proto": {
                "type": "addPoints",
                "proto_uri": "Σ/addPoints",
                "value": {}
            },
            "properties": {}
        },
        "prepareFrame": {
            "type": "Function",
            "value": "function prepareFrame(field) {\n        var Σ_prepareFrame = new Σ.Scope(this, prepareFrame, 'prepareFrame', Σ, { field: field }, []);\n        if (Σ.refs.framesTillAddingPoints == 0) {\n            Σ.refs.addPoints(Σ_prepareFrame.refs.field);\n            Σ.refs.framesTillAddingPoints = Σ.refs.framesBetweenAddingPoints;\n            Σ.refs.framesBetweenAddingPoints++;\n        } else {\n            Σ.refs.framesTillAddingPoints--;\n        }\n    }",
            "proto": {
                "type": "prepareFrame",
                "proto_uri": "Σ/prepareFrame",
                "value": {}
            },
            "properties": {}
        },
        "FluidField": {
            "type": "Function",
            "value": "function FluidField(canvas) {\n        var Σ_FluidField = new Σ.Scope(this, FluidField, 'FluidField', Σ, { canvas: canvas }, [\n            addFields,\n            set_bnd,\n            lin_solve,\n            diffuse,\n            lin_solve2,\n            diffuse2,\n            advect,\n            project,\n            dens_step,\n            vel_step,\n            Field,\n            queryUI,\n            reset\n        ]);\n        Σ_FluidField.refs.iterations = 10;\n        Σ_FluidField.refs.visc = 0.5;\n        Σ_FluidField.refs.dt = 0.1;\n        Σ_FluidField.refs.dens = undefined;\n        Σ_FluidField.refs.dens_prev = undefined;\n        Σ_FluidField.refs.u = undefined;\n        Σ_FluidField.refs.u_prev = undefined;\n        Σ_FluidField.refs.v = undefined;\n        Σ_FluidField.refs.v_prev = undefined;\n        Σ_FluidField.refs.width = undefined;\n        Σ_FluidField.refs.height = undefined;\n        Σ_FluidField.refs.rowSize = undefined;\n        Σ_FluidField.refs.size = undefined;\n        Σ_FluidField.refs.displayFunc = undefined;\n        function addFields(x, s, dt) {\n            var Σ_FluidField_addFields = new Σ.Scope(this, addFields, 'addFields', Σ_FluidField, {\n                x: x,\n                s: s,\n                dt: dt\n            }, []);\n            for (Σ_FluidField_addFields.refs.i = 0; Σ_FluidField_addFields.refs.i < Σ_FluidField.refs.size; Σ_FluidField_addFields.refs.i++) {\n                Σ_FluidField_addFields.refs.x[Σ_FluidField_addFields.refs.i] += Σ_FluidField_addFields.refs.dt * Σ_FluidField_addFields.refs.s[Σ_FluidField_addFields.refs.i];\n            }\n        }\n        function set_bnd(b, x) {\n            var Σ_FluidField_set_bnd = new Σ.Scope(this, set_bnd, 'set_bnd', Σ_FluidField, {\n                b: b,\n                x: x\n            }, []);\n            if (Σ_FluidField_set_bnd.refs.b === 1) {\n                for (Σ_FluidField_set_bnd.refs.i = 1; Σ_FluidField_set_bnd.refs.i <= Σ_FluidField.refs.width; Σ_FluidField_set_bnd.refs.i++) {\n                    Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.i] = Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.i + Σ_FluidField.refs.rowSize];\n                    Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.i + (Σ_FluidField.refs.height + 1) * Σ_FluidField.refs.rowSize] = Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.i + Σ_FluidField.refs.height * Σ_FluidField.refs.rowSize];\n                }\n                for (Σ_FluidField_set_bnd.refs.j = 1; Σ_FluidField_set_bnd.refs.j <= Σ_FluidField.refs.height; Σ_FluidField_set_bnd.refs.j++) {\n                    Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.j * Σ_FluidField.refs.rowSize] = -Σ_FluidField_set_bnd.refs.x[1 + Σ_FluidField_set_bnd.refs.j * Σ_FluidField.refs.rowSize];\n                    Σ_FluidField_set_bnd.refs.x[Σ_FluidField.refs.width + 1 + Σ_FluidField_set_bnd.refs.j * Σ_FluidField.refs.rowSize] = -Σ_FluidField_set_bnd.refs.x[Σ_FluidField.refs.width + Σ_FluidField_set_bnd.refs.j * Σ_FluidField.refs.rowSize];\n                }\n            } else if (Σ_FluidField_set_bnd.refs.b === 2) {\n                for (Σ_FluidField_set_bnd.refs.i = 1; Σ_FluidField_set_bnd.refs.i <= Σ_FluidField.refs.width; Σ_FluidField_set_bnd.refs.i++) {\n                    Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.i] = -Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.i + Σ_FluidField.refs.rowSize];\n                    Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.i + (Σ_FluidField.refs.height + 1) * Σ_FluidField.refs.rowSize] = -Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.i + Σ_FluidField.refs.height * Σ_FluidField.refs.rowSize];\n                }\n                for (Σ_FluidField_set_bnd.refs.j = 1; Σ_FluidField_set_bnd.refs.j <= Σ_FluidField.refs.height; Σ_FluidField_set_bnd.refs.j++) {\n                    Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.j * Σ_FluidField.refs.rowSize] = Σ_FluidField_set_bnd.refs.x[1 + Σ_FluidField_set_bnd.refs.j * Σ_FluidField.refs.rowSize];\n                    Σ_FluidField_set_bnd.refs.x[Σ_FluidField.refs.width + 1 + Σ_FluidField_set_bnd.refs.j * Σ_FluidField.refs.rowSize] = Σ_FluidField_set_bnd.refs.x[Σ_FluidField.refs.width + Σ_FluidField_set_bnd.refs.j * Σ_FluidField.refs.rowSize];\n                }\n            } else {\n                for (Σ_FluidField_set_bnd.refs.i = 1; Σ_FluidField_set_bnd.refs.i <= Σ_FluidField.refs.width; Σ_FluidField_set_bnd.refs.i++) {\n                    Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.i] = Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.i + Σ_FluidField.refs.rowSize];\n                    Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.i + (Σ_FluidField.refs.height + 1) * Σ_FluidField.refs.rowSize] = Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.i + Σ_FluidField.refs.height * Σ_FluidField.refs.rowSize];\n                }\n                for (Σ_FluidField_set_bnd.refs.j = 1; Σ_FluidField_set_bnd.refs.j <= Σ_FluidField.refs.height; Σ_FluidField_set_bnd.refs.j++) {\n                    Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.j * Σ_FluidField.refs.rowSize] = Σ_FluidField_set_bnd.refs.x[1 + Σ_FluidField_set_bnd.refs.j * Σ_FluidField.refs.rowSize];\n                    Σ_FluidField_set_bnd.refs.x[Σ_FluidField.refs.width + 1 + Σ_FluidField_set_bnd.refs.j * Σ_FluidField.refs.rowSize] = Σ_FluidField_set_bnd.refs.x[Σ_FluidField.refs.width + Σ_FluidField_set_bnd.refs.j * Σ_FluidField.refs.rowSize];\n                }\n            }\n            Σ_FluidField_set_bnd.refs.maxEdge = (Σ_FluidField.refs.height + 1) * Σ_FluidField.refs.rowSize;\n            Σ_FluidField_set_bnd.refs.x[0] = 0.5 * (Σ_FluidField_set_bnd.refs.x[1] + Σ_FluidField_set_bnd.refs.x[Σ_FluidField.refs.rowSize]);\n            Σ_FluidField_set_bnd.refs.x[Σ_FluidField_set_bnd.refs.maxEdge] = 0.5 * (Σ_FluidField_set_bnd.refs.x[1 + Σ_FluidField_set_bnd.refs.maxEdge] + Σ_FluidField_set_bnd.refs.x[Σ_FluidField.refs.height * Σ_FluidField.refs.rowSize]);\n            Σ_FluidField_set_bnd.refs.x[Σ_FluidField.refs.width + 1] = 0.5 * (Σ_FluidField_set_bnd.refs.x[Σ_FluidField.refs.width] + Σ_FluidField_set_bnd.refs.x[Σ_FluidField.refs.width + 1 + Σ_FluidField.refs.rowSize]);\n            Σ_FluidField_set_bnd.refs.x[Σ_FluidField.refs.width + 1 + Σ_FluidField_set_bnd.refs.maxEdge] = 0.5 * (Σ_FluidField_set_bnd.refs.x[Σ_FluidField.refs.width + Σ_FluidField_set_bnd.refs.maxEdge] + Σ_FluidField_set_bnd.refs.x[Σ_FluidField.refs.width + 1 + Σ_FluidField.refs.height * Σ_FluidField.refs.rowSize]);\n        }\n        function lin_solve(b, x, x0, a, c) {\n            var Σ_FluidField_lin_solve = new Σ.Scope(this, lin_solve, 'lin_solve', Σ_FluidField, {\n                b: b,\n                x: x,\n                x0: x0,\n                a: a,\n                c: c\n            }, []);\n            if (Σ_FluidField_lin_solve.refs.a === 0 && Σ_FluidField_lin_solve.refs.c === 1) {\n                for (Σ_FluidField_lin_solve.refs.j = 1; Σ_FluidField_lin_solve.refs.j <= Σ_FluidField.refs.height; Σ_FluidField_lin_solve.refs.j++) {\n                    Σ_FluidField_lin_solve.refs.currentRow = Σ_FluidField_lin_solve.refs.j * Σ_FluidField.refs.rowSize;\n                    ++Σ_FluidField_lin_solve.refs.currentRow;\n                    for (Σ_FluidField_lin_solve.refs.i = 0; Σ_FluidField_lin_solve.refs.i < Σ_FluidField.refs.width; Σ_FluidField_lin_solve.refs.i++) {\n                        Σ_FluidField_lin_solve.refs.x[Σ_FluidField_lin_solve.refs.currentRow] = Σ_FluidField_lin_solve.refs.x0[Σ_FluidField_lin_solve.refs.currentRow];\n                        ++Σ_FluidField_lin_solve.refs.currentRow;\n                    }\n                }\n                Σ_FluidField.refs.set_bnd(Σ_FluidField_lin_solve.refs.b, Σ_FluidField_lin_solve.refs.x);\n            } else {\n                Σ_FluidField_lin_solve.refs.invC = 1 / Σ_FluidField_lin_solve.refs.c;\n                for (Σ_FluidField_lin_solve.refs.k = 0; Σ_FluidField_lin_solve.refs.k < Σ_FluidField.refs.iterations; Σ_FluidField_lin_solve.refs.k++) {\n                    for (Σ_FluidField_lin_solve.refs.j = 1; Σ_FluidField_lin_solve.refs.j <= Σ_FluidField.refs.height; Σ_FluidField_lin_solve.refs.j++) {\n                        Σ_FluidField_lin_solve.refs.lastRow = (Σ_FluidField_lin_solve.refs.j - 1) * Σ_FluidField.refs.rowSize;\n                        Σ_FluidField_lin_solve.refs.currentRow = Σ_FluidField_lin_solve.refs.j * Σ_FluidField.refs.rowSize;\n                        Σ_FluidField_lin_solve.refs.nextRow = (Σ_FluidField_lin_solve.refs.j + 1) * Σ_FluidField.refs.rowSize;\n                        Σ_FluidField_lin_solve.refs.lastX = Σ_FluidField_lin_solve.refs.x[Σ_FluidField_lin_solve.refs.currentRow];\n                        ++Σ_FluidField_lin_solve.refs.currentRow;\n                        for (Σ_FluidField_lin_solve.refs.i = 1; Σ_FluidField_lin_solve.refs.i <= Σ_FluidField.refs.width; Σ_FluidField_lin_solve.refs.i++) {\n                            Σ_FluidField_lin_solve.refs.lastX = Σ_FluidField_lin_solve.refs.x[Σ_FluidField_lin_solve.refs.currentRow] = (Σ_FluidField_lin_solve.refs.x0[Σ_FluidField_lin_solve.refs.currentRow] + Σ_FluidField_lin_solve.refs.a * (Σ_FluidField_lin_solve.refs.lastX + Σ_FluidField_lin_solve.refs.x[++Σ_FluidField_lin_solve.refs.currentRow] + Σ_FluidField_lin_solve.refs.x[++Σ_FluidField_lin_solve.refs.lastRow] + Σ_FluidField_lin_solve.refs.x[++Σ_FluidField_lin_solve.refs.nextRow])) * Σ_FluidField_lin_solve.refs.invC;\n                        }\n                    }\n                    Σ_FluidField.refs.set_bnd(Σ_FluidField_lin_solve.refs.b, Σ_FluidField_lin_solve.refs.x);\n                }\n            }\n        }\n        function diffuse(b, x, x0, dt) {\n            var Σ_FluidField_diffuse = new Σ.Scope(this, diffuse, 'diffuse', Σ_FluidField, {\n                b: b,\n                x: x,\n                x0: x0,\n                dt: dt\n            }, []);\n            Σ_FluidField_diffuse.refs.a = 0;\n            Σ_FluidField.refs.lin_solve(Σ_FluidField_diffuse.refs.b, Σ_FluidField_diffuse.refs.x, Σ_FluidField_diffuse.refs.x0, Σ_FluidField_diffuse.refs.a, 1 + 4 * Σ_FluidField_diffuse.refs.a);\n        }\n        function lin_solve2(x, x0, y, y0, a, c) {\n            var Σ_FluidField_lin_solve2 = new Σ.Scope(this, lin_solve2, 'lin_solve2', Σ_FluidField, {\n                x: x,\n                x0: x0,\n                y: y,\n                y0: y0,\n                a: a,\n                c: c\n            }, []);\n            if (Σ_FluidField_lin_solve2.refs.a === 0 && Σ_FluidField_lin_solve2.refs.c === 1) {\n                for (Σ_FluidField_lin_solve2.refs.j = 1; Σ_FluidField_lin_solve2.refs.j <= Σ_FluidField.refs.height; Σ_FluidField_lin_solve2.refs.j++) {\n                    Σ_FluidField_lin_solve2.refs.currentRow = Σ_FluidField_lin_solve2.refs.j * Σ_FluidField.refs.rowSize;\n                    ++Σ_FluidField_lin_solve2.refs.currentRow;\n                    for (Σ_FluidField_lin_solve2.refs.i = 0; Σ_FluidField_lin_solve2.refs.i < Σ_FluidField.refs.width; Σ_FluidField_lin_solve2.refs.i++) {\n                        Σ_FluidField_lin_solve2.refs.x[Σ_FluidField_lin_solve2.refs.currentRow] = Σ_FluidField_lin_solve2.refs.x0[Σ_FluidField_lin_solve2.refs.currentRow];\n                        Σ_FluidField_lin_solve2.refs.y[Σ_FluidField_lin_solve2.refs.currentRow] = Σ_FluidField_lin_solve2.refs.y0[Σ_FluidField_lin_solve2.refs.currentRow];\n                        ++Σ_FluidField_lin_solve2.refs.currentRow;\n                    }\n                }\n                Σ_FluidField.refs.set_bnd(1, Σ_FluidField_lin_solve2.refs.x);\n                Σ_FluidField.refs.set_bnd(2, Σ_FluidField_lin_solve2.refs.y);\n            } else {\n                Σ_FluidField_lin_solve2.refs.invC = 1 / Σ_FluidField_lin_solve2.refs.c;\n                for (Σ_FluidField_lin_solve2.refs.k = 0; Σ_FluidField_lin_solve2.refs.k < Σ_FluidField.refs.iterations; Σ_FluidField_lin_solve2.refs.k++) {\n                    for (Σ_FluidField_lin_solve2.refs.j = 1; Σ_FluidField_lin_solve2.refs.j <= Σ_FluidField.refs.height; Σ_FluidField_lin_solve2.refs.j++) {\n                        Σ_FluidField_lin_solve2.refs.lastRow = (Σ_FluidField_lin_solve2.refs.j - 1) * Σ_FluidField.refs.rowSize;\n                        Σ_FluidField_lin_solve2.refs.currentRow = Σ_FluidField_lin_solve2.refs.j * Σ_FluidField.refs.rowSize;\n                        Σ_FluidField_lin_solve2.refs.nextRow = (Σ_FluidField_lin_solve2.refs.j + 1) * Σ_FluidField.refs.rowSize;\n                        Σ_FluidField_lin_solve2.refs.lastX = Σ_FluidField_lin_solve2.refs.x[Σ_FluidField_lin_solve2.refs.currentRow];\n                        Σ_FluidField_lin_solve2.refs.lastY = Σ_FluidField_lin_solve2.refs.y[Σ_FluidField_lin_solve2.refs.currentRow];\n                        ++Σ_FluidField_lin_solve2.refs.currentRow;\n                        for (Σ_FluidField_lin_solve2.refs.i = 1; Σ_FluidField_lin_solve2.refs.i <= Σ_FluidField.refs.width; Σ_FluidField_lin_solve2.refs.i++) {\n                            Σ_FluidField_lin_solve2.refs.lastX = Σ_FluidField_lin_solve2.refs.x[Σ_FluidField_lin_solve2.refs.currentRow] = (Σ_FluidField_lin_solve2.refs.x0[Σ_FluidField_lin_solve2.refs.currentRow] + Σ_FluidField_lin_solve2.refs.a * (Σ_FluidField_lin_solve2.refs.lastX + Σ_FluidField_lin_solve2.refs.x[Σ_FluidField_lin_solve2.refs.currentRow] + Σ_FluidField_lin_solve2.refs.x[Σ_FluidField_lin_solve2.refs.lastRow] + Σ_FluidField_lin_solve2.refs.x[Σ_FluidField_lin_solve2.refs.nextRow])) * Σ_FluidField_lin_solve2.refs.invC;\n                            Σ_FluidField_lin_solve2.refs.lastY = Σ_FluidField_lin_solve2.refs.y[Σ_FluidField_lin_solve2.refs.currentRow] = (Σ_FluidField_lin_solve2.refs.y0[Σ_FluidField_lin_solve2.refs.currentRow] + Σ_FluidField_lin_solve2.refs.a * (Σ_FluidField_lin_solve2.refs.lastY + Σ_FluidField_lin_solve2.refs.y[++Σ_FluidField_lin_solve2.refs.currentRow] + Σ_FluidField_lin_solve2.refs.y[++Σ_FluidField_lin_solve2.refs.lastRow] + Σ_FluidField_lin_solve2.refs.y[++Σ_FluidField_lin_solve2.refs.nextRow])) * Σ_FluidField_lin_solve2.refs.invC;\n                        }\n                    }\n                    Σ_FluidField.refs.set_bnd(1, Σ_FluidField_lin_solve2.refs.x);\n                    Σ_FluidField.refs.set_bnd(2, Σ_FluidField_lin_solve2.refs.y);\n                }\n            }\n        }\n        function diffuse2(x, x0, y, y0, dt) {\n            var Σ_FluidField_diffuse2 = new Σ.Scope(this, diffuse2, 'diffuse2', Σ_FluidField, {\n                x: x,\n                x0: x0,\n                y: y,\n                y0: y0,\n                dt: dt\n            }, []);\n            Σ_FluidField_diffuse2.refs.a = 0;\n            Σ_FluidField.refs.lin_solve2(Σ_FluidField_diffuse2.refs.x, Σ_FluidField_diffuse2.refs.x0, Σ_FluidField_diffuse2.refs.y, Σ_FluidField_diffuse2.refs.y0, Σ_FluidField_diffuse2.refs.a, 1 + 4 * Σ_FluidField_diffuse2.refs.a);\n        }\n        function advect(b, d, d0, u, v, dt) {\n            var Σ_FluidField_advect = new Σ.Scope(this, advect, 'advect', Σ_FluidField, {\n                b: b,\n                d: d,\n                d0: d0,\n                u: u,\n                v: v,\n                dt: dt\n            }, []);\n            Σ_FluidField_advect.refs.Wdt0 = Σ_FluidField_advect.refs.dt * Σ_FluidField.refs.width;\n            Σ_FluidField_advect.refs.Hdt0 = Σ_FluidField_advect.refs.dt * Σ_FluidField.refs.height;\n            Σ_FluidField_advect.refs.Wp5 = Σ_FluidField.refs.width + 0.5;\n            Σ_FluidField_advect.refs.Hp5 = Σ_FluidField.refs.height + 0.5;\n            for (Σ_FluidField_advect.refs.j = 1; Σ_FluidField_advect.refs.j <= Σ_FluidField.refs.height; Σ_FluidField_advect.refs.j++) {\n                Σ_FluidField_advect.refs.pos = Σ_FluidField_advect.refs.j * Σ_FluidField.refs.rowSize;\n                for (Σ_FluidField_advect.refs.i = 1; Σ_FluidField_advect.refs.i <= Σ_FluidField.refs.width; Σ_FluidField_advect.refs.i++) {\n                    Σ_FluidField_advect.refs.x = Σ_FluidField_advect.refs.i - Σ_FluidField_advect.refs.Wdt0 * Σ_FluidField_advect.refs.u[++Σ_FluidField_advect.refs.pos];\n                    Σ_FluidField_advect.refs.y = Σ_FluidField_advect.refs.j - Σ_FluidField_advect.refs.Hdt0 * Σ_FluidField_advect.refs.v[Σ_FluidField_advect.refs.pos];\n                    if (Σ_FluidField_advect.refs.x < 0.5) {\n                        Σ_FluidField_advect.refs.x = 0.5;\n                    } else if (Σ_FluidField_advect.refs.x > Σ_FluidField_advect.refs.Wp5) {\n                        Σ_FluidField_advect.refs.x = Σ_FluidField_advect.refs.Wp5;\n                    }\n                    Σ_FluidField_advect.refs.i0 = Σ_FluidField_advect.refs.x | 0;\n                    Σ_FluidField_advect.refs.i1 = Σ_FluidField_advect.refs.i0 + 1;\n                    if (Σ_FluidField_advect.refs.y < 0.5) {\n                        Σ_FluidField_advect.refs.y = 0.5;\n                    } else if (Σ_FluidField_advect.refs.y > Σ_FluidField_advect.refs.Hp5) {\n                        Σ_FluidField_advect.refs.y = Σ_FluidField_advect.refs.Hp5;\n                    }\n                    Σ_FluidField_advect.refs.j0 = Σ_FluidField_advect.refs.y | 0;\n                    Σ_FluidField_advect.refs.j1 = Σ_FluidField_advect.refs.j0 + 1;\n                    Σ_FluidField_advect.refs.s1 = Σ_FluidField_advect.refs.x - Σ_FluidField_advect.refs.i0;\n                    Σ_FluidField_advect.refs.s0 = 1 - Σ_FluidField_advect.refs.s1;\n                    Σ_FluidField_advect.refs.t1 = Σ_FluidField_advect.refs.y - Σ_FluidField_advect.refs.j0;\n                    Σ_FluidField_advect.refs.t0 = 1 - Σ_FluidField_advect.refs.t1;\n                    Σ_FluidField_advect.refs.row1 = Σ_FluidField_advect.refs.j0 * Σ_FluidField.refs.rowSize;\n                    Σ_FluidField_advect.refs.row2 = Σ_FluidField_advect.refs.j1 * Σ_FluidField.refs.rowSize;\n                    Σ_FluidField_advect.refs.d[Σ_FluidField_advect.refs.pos] = Σ_FluidField_advect.refs.s0 * (Σ_FluidField_advect.refs.t0 * Σ_FluidField_advect.refs.d0[Σ_FluidField_advect.refs.i0 + Σ_FluidField_advect.refs.row1] + Σ_FluidField_advect.refs.t1 * Σ_FluidField_advect.refs.d0[Σ_FluidField_advect.refs.i0 + Σ_FluidField_advect.refs.row2]) + Σ_FluidField_advect.refs.s1 * (Σ_FluidField_advect.refs.t0 * Σ_FluidField_advect.refs.d0[Σ_FluidField_advect.refs.i1 + Σ_FluidField_advect.refs.row1] + Σ_FluidField_advect.refs.t1 * Σ_FluidField_advect.refs.d0[Σ_FluidField_advect.refs.i1 + Σ_FluidField_advect.refs.row2]);\n                }\n            }\n            Σ_FluidField.refs.set_bnd(Σ_FluidField_advect.refs.b, Σ_FluidField_advect.refs.d);\n        }\n        function project(u, v, p, div) {\n            var Σ_FluidField_project = new Σ.Scope(this, project, 'project', Σ_FluidField, {\n                u: u,\n                v: v,\n                p: p,\n                div: div\n            }, []);\n            Σ_FluidField_project.refs.h = -0.5 / Math.sqrt(Σ_FluidField.refs.width * Σ_FluidField.refs.height);\n            for (Σ_FluidField_project.refs.j = 1; Σ_FluidField_project.refs.j <= Σ_FluidField.refs.height; Σ_FluidField_project.refs.j++) {\n                Σ_FluidField_project.refs.row = Σ_FluidField_project.refs.j * Σ_FluidField.refs.rowSize;\n                Σ_FluidField_project.refs.previousRow = (Σ_FluidField_project.refs.j - 1) * Σ_FluidField.refs.rowSize;\n                Σ_FluidField_project.refs.prevValue = Σ_FluidField_project.refs.row - 1;\n                Σ_FluidField_project.refs.currentRow = Σ_FluidField_project.refs.row;\n                Σ_FluidField_project.refs.nextValue = Σ_FluidField_project.refs.row + 1;\n                Σ_FluidField_project.refs.nextRow = (Σ_FluidField_project.refs.j + 1) * Σ_FluidField.refs.rowSize;\n                for (Σ_FluidField_project.refs.i = 1; Σ_FluidField_project.refs.i <= Σ_FluidField.refs.width; Σ_FluidField_project.refs.i++) {\n                    Σ_FluidField_project.refs.div[++Σ_FluidField_project.refs.currentRow] = Σ_FluidField_project.refs.h * (Σ_FluidField_project.refs.u[++Σ_FluidField_project.refs.nextValue] - Σ_FluidField_project.refs.u[++Σ_FluidField_project.refs.prevValue] + Σ_FluidField_project.refs.v[++Σ_FluidField_project.refs.nextRow] - Σ_FluidField_project.refs.v[++Σ_FluidField_project.refs.previousRow]);\n                    Σ_FluidField_project.refs.p[Σ_FluidField_project.refs.currentRow] = 0;\n                }\n            }\n            Σ_FluidField.refs.set_bnd(0, Σ_FluidField_project.refs.div);\n            Σ_FluidField.refs.set_bnd(0, Σ_FluidField_project.refs.p);\n            Σ_FluidField.refs.lin_solve(0, Σ_FluidField_project.refs.p, Σ_FluidField_project.refs.div, 1, 4);\n            Σ_FluidField_project.refs.wScale = 0.5 * Σ_FluidField.refs.width;\n            Σ_FluidField_project.refs.hScale = 0.5 * Σ_FluidField.refs.height;\n            for (Σ_FluidField_project.refs.j = 1; Σ_FluidField_project.refs.j <= Σ_FluidField.refs.height; Σ_FluidField_project.refs.j++) {\n                Σ_FluidField_project.refs.prevPos = Σ_FluidField_project.refs.j * Σ_FluidField.refs.rowSize - 1;\n                Σ_FluidField_project.refs.currentPos = Σ_FluidField_project.refs.j * Σ_FluidField.refs.rowSize;\n                Σ_FluidField_project.refs.nextPos = Σ_FluidField_project.refs.j * Σ_FluidField.refs.rowSize + 1;\n                Σ_FluidField_project.refs.prevRow = (Σ_FluidField_project.refs.j - 1) * Σ_FluidField.refs.rowSize;\n                Σ_FluidField_project.refs.currentRow = Σ_FluidField_project.refs.j * Σ_FluidField.refs.rowSize;\n                Σ_FluidField_project.refs.nextRow = (Σ_FluidField_project.refs.j + 1) * Σ_FluidField.refs.rowSize;\n                for (Σ_FluidField_project.refs.i = 1; Σ_FluidField_project.refs.i <= Σ_FluidField.refs.width; Σ_FluidField_project.refs.i++) {\n                    Σ_FluidField_project.refs.u[++Σ_FluidField_project.refs.currentPos] -= Σ_FluidField_project.refs.wScale * (Σ_FluidField_project.refs.p[++Σ_FluidField_project.refs.nextPos] - Σ_FluidField_project.refs.p[++Σ_FluidField_project.refs.prevPos]);\n                    Σ_FluidField_project.refs.v[Σ_FluidField_project.refs.currentPos] -= Σ_FluidField_project.refs.hScale * (Σ_FluidField_project.refs.p[++Σ_FluidField_project.refs.nextRow] - Σ_FluidField_project.refs.p[++Σ_FluidField_project.refs.prevRow]);\n                }\n            }\n            Σ_FluidField.refs.set_bnd(1, Σ_FluidField_project.refs.u);\n            Σ_FluidField.refs.set_bnd(2, Σ_FluidField_project.refs.v);\n        }\n        function dens_step(x, x0, u, v, dt) {\n            var Σ_FluidField_dens_step = new Σ.Scope(this, dens_step, 'dens_step', Σ_FluidField, {\n                x: x,\n                x0: x0,\n                u: u,\n                v: v,\n                dt: dt\n            }, []);\n            Σ_FluidField.refs.addFields(Σ_FluidField_dens_step.refs.x, Σ_FluidField_dens_step.refs.x0, Σ_FluidField_dens_step.refs.dt);\n            Σ_FluidField.refs.diffuse(0, Σ_FluidField_dens_step.refs.x0, Σ_FluidField_dens_step.refs.x, Σ_FluidField_dens_step.refs.dt);\n            Σ_FluidField.refs.advect(0, Σ_FluidField_dens_step.refs.x, Σ_FluidField_dens_step.refs.x0, Σ_FluidField_dens_step.refs.u, Σ_FluidField_dens_step.refs.v, Σ_FluidField_dens_step.refs.dt);\n        }\n        function vel_step(u, v, u0, v0, dt) {\n            var Σ_FluidField_vel_step = new Σ.Scope(this, vel_step, 'vel_step', Σ_FluidField, {\n                u: u,\n                v: v,\n                u0: u0,\n                v0: v0,\n                dt: dt\n            }, []);\n            Σ_FluidField.refs.addFields(Σ_FluidField_vel_step.refs.u, Σ_FluidField_vel_step.refs.u0, Σ_FluidField_vel_step.refs.dt);\n            Σ_FluidField.refs.addFields(Σ_FluidField_vel_step.refs.v, Σ_FluidField_vel_step.refs.v0, Σ_FluidField_vel_step.refs.dt);\n            Σ_FluidField_vel_step.refs.temp = Σ_FluidField_vel_step.refs.u0;\n            Σ_FluidField_vel_step.refs.u0 = Σ_FluidField_vel_step.refs.u;\n            Σ_FluidField_vel_step.refs.u = Σ_FluidField_vel_step.refs.temp;\n            Σ_FluidField_vel_step.refs.temp = Σ_FluidField_vel_step.refs.v0;\n            Σ_FluidField_vel_step.refs.v0 = Σ_FluidField_vel_step.refs.v;\n            Σ_FluidField_vel_step.refs.v = Σ_FluidField_vel_step.refs.temp;\n            Σ_FluidField.refs.diffuse2(Σ_FluidField_vel_step.refs.u, Σ_FluidField_vel_step.refs.u0, Σ_FluidField_vel_step.refs.v, Σ_FluidField_vel_step.refs.v0, Σ_FluidField_vel_step.refs.dt);\n            Σ_FluidField.refs.project(Σ_FluidField_vel_step.refs.u, Σ_FluidField_vel_step.refs.v, Σ_FluidField_vel_step.refs.u0, Σ_FluidField_vel_step.refs.v0);\n            Σ_FluidField_vel_step.refs.temp = Σ_FluidField_vel_step.refs.u0;\n            Σ_FluidField_vel_step.refs.u0 = Σ_FluidField_vel_step.refs.u;\n            Σ_FluidField_vel_step.refs.u = Σ_FluidField_vel_step.refs.temp;\n            Σ_FluidField_vel_step.refs.temp = Σ_FluidField_vel_step.refs.v0;\n            Σ_FluidField_vel_step.refs.v0 = Σ_FluidField_vel_step.refs.v;\n            Σ_FluidField_vel_step.refs.v = Σ_FluidField_vel_step.refs.temp;\n            Σ_FluidField.refs.advect(1, Σ_FluidField_vel_step.refs.u, Σ_FluidField_vel_step.refs.u0, Σ_FluidField_vel_step.refs.u0, Σ_FluidField_vel_step.refs.v0, Σ_FluidField_vel_step.refs.dt);\n            Σ_FluidField.refs.advect(2, Σ_FluidField_vel_step.refs.v, Σ_FluidField_vel_step.refs.v0, Σ_FluidField_vel_step.refs.u0, Σ_FluidField_vel_step.refs.v0, Σ_FluidField_vel_step.refs.dt);\n            Σ_FluidField.refs.project(Σ_FluidField_vel_step.refs.u, Σ_FluidField_vel_step.refs.v, Σ_FluidField_vel_step.refs.u0, Σ_FluidField_vel_step.refs.v0);\n        }\n        Σ_FluidField.refs.uiCallback = Σ_FluidField.addFunction(function αyEBW(d, u, v) {\n            var Σ_FluidField_αyEBW = new Σ.Scope(this, αyEBW, 'αyEBW', Σ_FluidField, {\n                d: d,\n                u: u,\n                v: v\n            }, []);\n        }, Σ_FluidField);\n        function Field(dens, u, v) {\n            var Σ_FluidField_Field = new Σ.Scope(this, Field, 'Field', Σ_FluidField, {\n                dens: dens,\n                u: u,\n                v: v\n            }, []);\n            this.setDensity = Σ_FluidField_Field.addFunction(function αetbR(x, y, d) {\n                var Σ_FluidField_Field_αetbR = new Σ.Scope(this, αetbR, 'αetbR', Σ_FluidField_Field, {\n                    x: x,\n                    y: y,\n                    d: d\n                }, []);\n                Σ_FluidField_Field.refs.dens[Σ_FluidField_Field_αetbR.refs.x + 1 + (Σ_FluidField_Field_αetbR.refs.y + 1) * Σ_FluidField.refs.rowSize] = Σ_FluidField_Field_αetbR.refs.d;\n            }, Σ_FluidField_Field);\n            this.getDensity = Σ_FluidField_Field.addFunction(function αignI(x, y) {\n                var Σ_FluidField_Field_αignI = new Σ.Scope(this, αignI, 'αignI', Σ_FluidField_Field, {\n                    x: x,\n                    y: y\n                }, []);\n                return Σ_FluidField_Field.refs.dens[Σ_FluidField_Field_αignI.refs.x + 1 + (Σ_FluidField_Field_αignI.refs.y + 1) * Σ_FluidField.refs.rowSize];\n            }, Σ_FluidField_Field);\n            this.setVelocity = Σ_FluidField_Field.addFunction(function αwEfh(x, y, xv, yv) {\n                var Σ_FluidField_Field_αwEfh = new Σ.Scope(this, αwEfh, 'αwEfh', Σ_FluidField_Field, {\n                    x: x,\n                    y: y,\n                    xv: xv,\n                    yv: yv\n                }, []);\n                Σ_FluidField_Field.refs.u[Σ_FluidField_Field_αwEfh.refs.x + 1 + (Σ_FluidField_Field_αwEfh.refs.y + 1) * Σ_FluidField.refs.rowSize] = Σ_FluidField_Field_αwEfh.refs.xv;\n                Σ_FluidField_Field.refs.v[Σ_FluidField_Field_αwEfh.refs.x + 1 + (Σ_FluidField_Field_αwEfh.refs.y + 1) * Σ_FluidField.refs.rowSize] = Σ_FluidField_Field_αwEfh.refs.yv;\n            }, Σ_FluidField_Field);\n            this.getXVelocity = Σ_FluidField_Field.addFunction(function αgkb1(x, y) {\n                var Σ_FluidField_Field_αgkb1 = new Σ.Scope(this, αgkb1, 'αgkb1', Σ_FluidField_Field, {\n                    x: x,\n                    y: y\n                }, []);\n                return Σ_FluidField_Field.refs.u[Σ_FluidField_Field_αgkb1.refs.x + 1 + (Σ_FluidField_Field_αgkb1.refs.y + 1) * Σ_FluidField.refs.rowSize];\n            }, Σ_FluidField_Field);\n            this.getYVelocity = Σ_FluidField_Field.addFunction(function αEKbK(x, y) {\n                var Σ_FluidField_Field_αEKbK = new Σ.Scope(this, αEKbK, 'αEKbK', Σ_FluidField_Field, {\n                    x: x,\n                    y: y\n                }, []);\n                return Σ_FluidField_Field.refs.v[Σ_FluidField_Field_αEKbK.refs.x + 1 + (Σ_FluidField_Field_αEKbK.refs.y + 1) * Σ_FluidField.refs.rowSize];\n            }, Σ_FluidField_Field);\n            this.width = Σ_FluidField_Field.addFunction(function α8J1n() {\n                var Σ_FluidField_Field_α8J1n = new Σ.Scope(this, α8J1n, 'α8J1n', Σ_FluidField_Field, {}, []);\n                return Σ_FluidField.refs.width;\n            }, Σ_FluidField_Field);\n            this.height = Σ_FluidField_Field.addFunction(function αVmS4() {\n                var Σ_FluidField_Field_αVmS4 = new Σ.Scope(this, αVmS4, 'αVmS4', Σ_FluidField_Field, {}, []);\n                return Σ_FluidField.refs.height;\n            }, Σ_FluidField_Field);\n        }\n        function queryUI(d, u, v) {\n            var Σ_FluidField_queryUI = new Σ.Scope(this, queryUI, 'queryUI', Σ_FluidField, {\n                d: d,\n                u: u,\n                v: v\n            }, []);\n            for (Σ_FluidField_queryUI.refs.i = 0; Σ_FluidField_queryUI.refs.i < Σ_FluidField.refs.size; Σ_FluidField_queryUI.refs.i++) {\n                Σ_FluidField_queryUI.refs.u[Σ_FluidField_queryUI.refs.i] = Σ_FluidField_queryUI.refs.v[Σ_FluidField_queryUI.refs.i] = Σ_FluidField_queryUI.refs.d[Σ_FluidField_queryUI.refs.i] = 0;\n            }\n            Σ_FluidField.refs.uiCallback(new Σ_FluidField.refs.Field(Σ_FluidField_queryUI.refs.d, Σ_FluidField_queryUI.refs.u, Σ_FluidField_queryUI.refs.v));\n        }\n        function reset() {\n            var Σ_FluidField_reset = new Σ.Scope(this, reset, 'reset', Σ_FluidField, {}, []);\n            Σ_FluidField.refs.rowSize = Σ_FluidField.refs.width + 2;\n            Σ_FluidField.refs.size = (Σ_FluidField.refs.width + 2) * (Σ_FluidField.refs.height + 2);\n            Σ_FluidField.refs.dens = new Array(Σ_FluidField.refs.size);\n            Σ_FluidField.refs.dens_prev = new Array(Σ_FluidField.refs.size);\n            Σ_FluidField.refs.u = new Array(Σ_FluidField.refs.size);\n            Σ_FluidField.refs.u_prev = new Array(Σ_FluidField.refs.size);\n            Σ_FluidField.refs.v = new Array(Σ_FluidField.refs.size);\n            Σ_FluidField.refs.v_prev = new Array(Σ_FluidField.refs.size);\n            for (Σ_FluidField_reset.refs.i = 0; Σ_FluidField_reset.refs.i < Σ_FluidField.refs.size; Σ_FluidField_reset.refs.i++) {\n                Σ_FluidField.refs.dens_prev[Σ_FluidField_reset.refs.i] = Σ_FluidField.refs.u_prev[Σ_FluidField_reset.refs.i] = Σ_FluidField.refs.v_prev[Σ_FluidField_reset.refs.i] = Σ_FluidField.refs.dens[Σ_FluidField_reset.refs.i] = Σ_FluidField.refs.u[Σ_FluidField_reset.refs.i] = Σ_FluidField.refs.v[Σ_FluidField_reset.refs.i] = 0;\n            }\n        }\n        this.reset = Σ_FluidField.refs.reset;\n        this.getDens = Σ_FluidField.addFunction(function αb2q3() {\n            var Σ_FluidField_αb2q3 = new Σ.Scope(this, αb2q3, 'αb2q3', Σ_FluidField, {}, []);\n            return Σ_FluidField.refs.dens;\n        }, Σ_FluidField);\n        this.setResolution = Σ_FluidField.addFunction(function αz24M(hRes, wRes) {\n            var Σ_FluidField_αz24M = new Σ.Scope(this, αz24M, 'αz24M', Σ_FluidField, {\n                hRes: hRes,\n                wRes: wRes\n            }, []);\n            Σ_FluidField_αz24M.refs.res = Σ_FluidField_αz24M.refs.wRes * Σ_FluidField_αz24M.refs.hRes;\n            if (Σ_FluidField_αz24M.refs.res > 0 && Σ_FluidField_αz24M.refs.res < 1000000 && (Σ_FluidField_αz24M.refs.wRes != Σ_FluidField.refs.width || Σ_FluidField_αz24M.refs.hRes != Σ_FluidField.refs.height)) {\n                Σ_FluidField.refs.width = Σ_FluidField_αz24M.refs.wRes;\n                Σ_FluidField.refs.height = Σ_FluidField_αz24M.refs.hRes;\n                Σ_FluidField.refs.reset();\n                return true;\n            }\n            return false;\n        }, Σ_FluidField);\n        this.setResolution(64, 64);\n        this.update = Σ_FluidField.addFunction(function αBZO6() {\n            var Σ_FluidField_αBZO6 = new Σ.Scope(this, αBZO6, 'αBZO6', Σ_FluidField, {}, []);\n            Σ_FluidField.refs.queryUI(Σ_FluidField.refs.dens_prev, Σ_FluidField.refs.u_prev, Σ_FluidField.refs.v_prev);\n            Σ_FluidField.refs.vel_step(Σ_FluidField.refs.u, Σ_FluidField.refs.v, Σ_FluidField.refs.u_prev, Σ_FluidField.refs.v_prev, Σ_FluidField.refs.dt);\n            Σ_FluidField.refs.dens_step(Σ_FluidField.refs.dens, Σ_FluidField.refs.dens_prev, Σ_FluidField.refs.u, Σ_FluidField.refs.v, Σ_FluidField.refs.dt);\n            Σ_FluidField.refs.displayFunc(new Σ_FluidField.refs.Field(Σ_FluidField.refs.dens, Σ_FluidField.refs.u, Σ_FluidField.refs.v));\n        }, Σ_FluidField);\n        this.setDisplayFunction = Σ_FluidField.addFunction(function αKEOx(func) {\n            var Σ_FluidField_αKEOx = new Σ.Scope(this, αKEOx, 'αKEOx', Σ_FluidField, { func: func }, []);\n            Σ_FluidField.refs.displayFunc = Σ_FluidField_αKEOx.refs.func;\n        }, Σ_FluidField);\n        this.iterations = Σ_FluidField.addFunction(function αYvAJ() {\n            var Σ_FluidField_αYvAJ = new Σ.Scope(this, αYvAJ, 'αYvAJ', Σ_FluidField, {}, []);\n            return Σ_FluidField.refs.iterations;\n        }, Σ_FluidField);\n        this.setIterations = Σ_FluidField.addFunction(function αHifa(iters) {\n            var Σ_FluidField_αHifa = new Σ.Scope(this, αHifa, 'αHifa', Σ_FluidField, { iters: iters }, []);\n            if (Σ_FluidField_αHifa.refs.iters > 0 && Σ_FluidField_αHifa.refs.iters <= 100) {\n                Σ_FluidField.refs.iterations = Σ_FluidField_αHifa.refs.iters;\n            }\n        }, Σ_FluidField);\n        this.setUICallback = Σ_FluidField.addFunction(function αFqNh(callback) {\n            var Σ_FluidField_αFqNh = new Σ.Scope(this, αFqNh, 'αFqNh', Σ_FluidField, { callback: callback }, []);\n            Σ_FluidField.refs.uiCallback = Σ_FluidField_αFqNh.refs.callback;\n        }, Σ_FluidField);\n    }",
            "proto": {
                "type": "FluidField",
                "proto_uri": "Σ/FluidField",
                "value": {}
            },
            "properties": {}
        },
        "BM_Start": {
            "type": "Function",
            "value": "function BM_Start() {\n        var Σ_BM_Start = new Σ.Scope(this, BM_Start, 'BM_Start', Σ, {}, [doRun]);\n        Σ.refs.BM_SetupFunc();\n        Σ_BM_Start.refs.data = {\n            runs: 0,\n            elapsed: 0\n        };\n        Σ_BM_Start.refs.elapsed = 0;\n        Σ_BM_Start.refs.start = Date.now();\n        Σ_BM_Start.refs.end = null;\n        Σ_BM_Start.refs.i = 0;\n        function doRun() {\n            var Σ_BM_Start_doRun = new Σ.Scope(this, doRun, 'doRun', Σ_BM_Start, {}, []);\n            Σ.log('Iteration : ' + Σ_BM_Start.refs.i);\n            Σ.refs.BM_RunFunc();\n            Σ_BM_Start.refs.elapsed = Date.now() - Σ_BM_Start.refs.start;\n            Σ_BM_Start.refs.i++;\n            if (Σ_BM_Start.refs.i < Σ.refs.BM_Iterations) {\n                Σ.setImmediate(Σ_BM_Start.refs.doRun);\n            } else {\n                if (Σ_BM_Start.refs.data != null) {\n                    Σ_BM_Start.refs.data.runs += Σ_BM_Start.refs.i;\n                    Σ_BM_Start.refs.data.elapsed += Σ_BM_Start.refs.elapsed;\n                }\n                Σ.log('Runs: ' + Σ_BM_Start.refs.data.runs + '\\t|\\tElapsed: ' + Σ_BM_Start.refs.data.elapsed);\n                Σ_BM_Start.refs.end = Date.now();\n                Σ.log('Total time : ' + (Σ_BM_Start.refs.end - Σ_BM_Start.refs.start) + ' ms');\n                Σ_BM_Start_doRun.refs.usec = Σ_BM_Start.refs.data.elapsed * 1000 / Σ_BM_Start.refs.data.runs;\n                Σ_BM_Start_doRun.refs.rms = 0;\n                Σ.refs.BM_Results.push({\n                    time: Σ_BM_Start_doRun.refs.usec,\n                    latency: Σ_BM_Start_doRun.refs.rms\n                });\n            }\n        }\n        Σ.setImmediate(Σ_BM_Start.refs.doRun);\n    }",
            "proto": {
                "type": "BM_Start",
                "proto_uri": "Σ/BM_Start",
                "value": {}
            },
            "properties": {}
        },
        "α41pw.q7goIU": {
            "type": "Function",
            "value": "function α41pw() {\n        var Σ_α41pw = new Σ.Scope(this, α41pw, 'α41pw', Σ, {}, []);\n        return Date.now();\n    }",
            "proto": {
                "type": "α41pw",
                "value": {}
            },
            "properties": {}
        }
    },
    "refs": {
        "runNavierStokes": {
            "type": "Function",
            "value": "Σ/runNavierStokes"
        },
        "checkResult": {
            "type": "Function",
            "value": "Σ/checkResult"
        },
        "voidFunc": {
            "type": "Function",
            "value": "Σ/voidFunc"
        },
        "setupNavierStokes": {
            "type": "Function",
            "value": "Σ/setupNavierStokes"
        },
        "tearDownNavierStokes": {
            "type": "Function",
            "value": "Σ/tearDownNavierStokes"
        },
        "addPoints": {
            "type": "Function",
            "value": "Σ/addPoints"
        },
        "prepareFrame": {
            "type": "Function",
            "value": "Σ/prepareFrame"
        },
        "FluidField": {
            "type": "Function",
            "value": "Σ/FluidField"
        },
        "BM_Start": {
            "type": "Function",
            "value": "Σ/BM_Start"
        },
        "solver": {
            "type": "FluidField",
            "proto_uri": "Σ/FluidField",
            "value": {
                "τscope": {
                    "type": "Scope",
                    "value": "Σ/FluidField_msNV"
                },
                "reset": {
                    "type": "Function",
                    "value": "Σ/FluidField_msNV/reset"
                },
                "getDens": {
                    "type": "Function",
                    "value": "Σ/FluidField_msNV/αb2q3.G0Wi3H"
                },
                "setResolution": {
                    "type": "Function",
                    "value": "Σ/FluidField_msNV/αz24M.mmkSnN"
                },
                "update": {
                    "type": "Function",
                    "value": "Σ/FluidField_msNV/αBZO6.cZVouk"
                },
                "setDisplayFunction": {
                    "type": "Function",
                    "value": "Σ/FluidField_msNV/αKEOx.YQnX8u"
                },
                "iterations": {
                    "type": "Function",
                    "value": "Σ/FluidField_msNV/αYvAJ.nJiulW"
                },
                "setIterations": {
                    "type": "Function",
                    "value": "Σ/FluidField_msNV/αHifa.EPF8gQ"
                },
                "setUICallback": {
                    "type": "Function",
                    "value": "Σ/FluidField_msNV/αFqNh.DkWAuT"
                }
            }
        },
        "nsFrameCounter": 321,
        "framesTillAddingPoints": 15,
        "framesBetweenAddingPoints": 26,
        "performance": {
            "type": "Object",
            "value": {
                "now": {
                    "type": "Function",
                    "value": "Σ/α41pw.q7goIU"
                }
            }
        },
        "BM_RunFunc": {
            "type": "things-js.reference",
            "uri": "Σ.runNavierStokes"
        },
        "BM_SetupFunc": {
            "type": "things-js.reference",
            "uri": "Σ.setupNavierStokes"
        },
        "BM_TearDownFunc": {
            "type": "things-js.reference",
            "uri": "Σ.tearDownNavierStokes"
        },
        "BM_Iterations": 1000,
        "BM_Min_Iterations": 16,
        "BM_Results": [],
        "result": 77
    },
    "children": {
        "BM_Start_4Zh2": {
            "id": "BM_Start",
            "uid": "BM_Start_4Zh2",
            "func_name": "BM_Start",
            "params": {
                "doRun": {
                    "type": "Function",
                    "value": "Σ/BM_Start_4Zh2/doRun"
                },
                "data": {
                    "type": "Object",
                    "value": {
                        "runs": 0,
                        "elapsed": 0
                    }
                },
                "elapsed": 3223,
                "start": 1523336790737,
                "end": null,
                "i": 321
            },
            "hoisted": {
                "doRun": "doRun"
            },
            "funcs": {
                "doRun": {
                    "type": "Function",
                    "value": "function doRun() {\n            var Σ_BM_Start_doRun = new Σ.Scope(this, doRun, 'doRun', Σ_BM_Start, {}, []);\n            Σ.log('Iteration : ' + Σ_BM_Start.refs.i);\n            Σ.refs.BM_RunFunc();\n            Σ_BM_Start.refs.elapsed = Date.now() - Σ_BM_Start.refs.start;\n            Σ_BM_Start.refs.i++;\n            if (Σ_BM_Start.refs.i < Σ.refs.BM_Iterations) {\n                Σ.setImmediate(Σ_BM_Start.refs.doRun);\n            } else {\n                if (Σ_BM_Start.refs.data != null) {\n                    Σ_BM_Start.refs.data.runs += Σ_BM_Start.refs.i;\n                    Σ_BM_Start.refs.data.elapsed += Σ_BM_Start.refs.elapsed;\n                }\n                Σ.log('Runs: ' + Σ_BM_Start.refs.data.runs + '\\t|\\tElapsed: ' + Σ_BM_Start.refs.data.elapsed);\n                Σ_BM_Start.refs.end = Date.now();\n                Σ.log('Total time : ' + (Σ_BM_Start.refs.end - Σ_BM_Start.refs.start) + ' ms');\n                Σ_BM_Start_doRun.refs.usec = Σ_BM_Start.refs.data.elapsed * 1000 / Σ_BM_Start.refs.data.runs;\n                Σ_BM_Start_doRun.refs.rms = 0;\n                Σ.refs.BM_Results.push({\n                    time: Σ_BM_Start_doRun.refs.usec,\n                    latency: Σ_BM_Start_doRun.refs.rms\n                });\n            }\n        }",
                    "proto": {
                        "type": "doRun",
                        "proto_uri": "Σ/BM_Start_4Zh2/doRun",
                        "value": {}
                    },
                    "properties": {}
                }
            },
            "refs": {
                "doRun": {
                    "type": "Function",
                    "value": "Σ/BM_Start_4Zh2/doRun"
                },
                "data": {
                    "type": "Object",
                    "value": {
                        "runs": 0,
                        "elapsed": 0
                    }
                },
                "elapsed": 3223,
                "start": 1523336790737,
                "end": null,
                "i": 321
            },
            "children": {}
        }
    }
}