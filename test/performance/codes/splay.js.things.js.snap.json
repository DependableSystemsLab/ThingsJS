{
    "meta": {
        "pubsub": "mqtt://localhost",
        "code_name": "splay.js"
    },
    "timers": {
        "K1fYr7oH": {
            "id": "K1fYr7oH",
            "type": "Immediate",
            "callback": "Σ/20_uVX7/doRun",
            "timedelta": 0,
            "called_at": 1523560319525,
            "stopped_at": 1523560319526
        }
    },
    "id": "Σ",
    "uid": "Σ",
    "func_name": "root",
    "params": {},
    "hoisted": {
        "GeneratePayloadTree": "GeneratePayloadTree",
        "GenerateKey": "GenerateKey",
        "SplayRMS": "SplayRMS",
        "SplayUpdateStats": "SplayUpdateStats",
        "InsertNewNode": "InsertNewNode",
        "SplaySetup": "SplaySetup",
        "SplayTearDown": "SplayTearDown",
        "SplayRun": "SplayRun",
        "SplayTree": "SplayTree",
        "BM_Start": "BM_Start"
    },
    "funcs": {
        "GeneratePayloadTree": {
            "type": "Function",
            "value": "function GeneratePayloadTree(depth, tag) {\n        var Σ_0 = new Σ.Scope(this, GeneratePayloadTree, '0', Σ, {\n            depth: depth,\n            tag: tag\n        }, []);\n        if (Σ_0.refs.depth == 0) {\n            return {\n                array: [\n                    0,\n                    1,\n                    2,\n                    3,\n                    4,\n                    5,\n                    6,\n                    7,\n                    8,\n                    9\n                ],\n                string: 'String for key ' + Σ_0.refs.tag + ' in leaf node'\n            };\n        } else {\n            return {\n                left: Σ.refs.GeneratePayloadTree(Σ_0.refs.depth - 1, Σ_0.refs.tag),\n                right: Σ.refs.GeneratePayloadTree(Σ_0.refs.depth - 1, Σ_0.refs.tag)\n            };\n        }\n    }",
            "protects": "Σ",
            "proto": {
                "type": "GeneratePayloadTree",
                "proto_uri": "Σ/GeneratePayloadTree",
                "value": {}
            },
            "properties": {}
        },
        "GenerateKey": {
            "type": "Function",
            "value": "function GenerateKey() {\n        var Σ_1 = new Σ.Scope(this, GenerateKey, '1', Σ, {}, []);\n        return Math.random();\n    }",
            "protects": "Σ",
            "proto": {
                "type": "GenerateKey",
                "proto_uri": "Σ/GenerateKey",
                "value": {}
            },
            "properties": {}
        },
        "SplayRMS": {
            "type": "Function",
            "value": "function SplayRMS() {\n        var Σ_2 = new Σ.Scope(this, SplayRMS, '2', Σ, {}, []);\n        return Math.round(Math.sqrt(Σ.refs.splaySumOfSquaredPauses / Σ.refs.splaySamples) * 10000);\n    }",
            "protects": "Σ",
            "proto": {
                "type": "SplayRMS",
                "proto_uri": "Σ/SplayRMS",
                "value": {}
            },
            "properties": {}
        },
        "SplayUpdateStats": {
            "type": "Function",
            "value": "function SplayUpdateStats(time) {\n        var Σ_3 = new Σ.Scope(this, SplayUpdateStats, '3', Σ, {\n            time: time\n        }, []);\n        Σ_3.refs.pause = Σ_3.refs.time - Σ.refs.splaySampleTimeStart;\n        Σ.refs.splaySampleTimeStart = Σ_3.refs.time;\n        Σ.refs.splaySamples++;\n        Σ.refs.splaySumOfSquaredPauses += Σ_3.refs.pause * Σ_3.refs.pause;\n    }",
            "protects": "Σ",
            "proto": {
                "type": "SplayUpdateStats",
                "proto_uri": "Σ/SplayUpdateStats",
                "value": {}
            },
            "properties": {}
        },
        "InsertNewNode": {
            "type": "Function",
            "value": "function InsertNewNode() {\n        var Σ_4 = new Σ.Scope(this, InsertNewNode, '4', Σ, {}, []);\n        Σ_4.refs.key = undefined;\n        do {\n            Σ_4.refs.key = Σ.refs.GenerateKey();\n        } while (Σ.refs.splayTree.find(Σ_4.refs.key) != null);\n        Σ_4.refs.payload = Σ.refs.GeneratePayloadTree(Σ.refs.kSplayTreePayloadDepth, String(Σ_4.refs.key));\n        Σ.refs.splayTree.insert(Σ_4.refs.key, Σ_4.refs.payload);\n        return Σ_4.refs.key;\n    }",
            "protects": "Σ",
            "proto": {
                "type": "InsertNewNode",
                "proto_uri": "Σ/InsertNewNode",
                "value": {}
            },
            "properties": {}
        },
        "SplaySetup": {
            "type": "Function",
            "value": "function SplaySetup() {\n        var Σ_5 = new Σ.Scope(this, SplaySetup, '5', Σ, {}, []);\n        if (!Σ.refs.performance.now) {\n            throw 'PerformanceNowUnsupported';\n        }\n        Σ.refs.splayTree = new Σ.refs.SplayTree();\n        Σ.refs.splaySampleTimeStart = Σ.refs.performance.now();\n        for (Σ_5.refs.i = 0; Σ_5.refs.i < Σ.refs.kSplayTreeSize; Σ_5.refs.i++) {\n            Σ.refs.InsertNewNode();\n            if ((Σ_5.refs.i + 1) % 20 == 19) {\n                Σ.refs.SplayUpdateStats(Σ.refs.performance.now());\n            }\n        }\n    }",
            "protects": "Σ",
            "proto": {
                "type": "SplaySetup",
                "proto_uri": "Σ/SplaySetup",
                "value": {}
            },
            "properties": {}
        },
        "SplayTearDown": {
            "type": "Function",
            "value": "function SplayTearDown() {\n        var Σ_6 = new Σ.Scope(this, SplayTearDown, '6', Σ, {}, []);\n        Σ_6.refs.keys = Σ.refs.splayTree.exportKeys();\n        Σ.refs.splayTree = null;\n        Σ.refs.splaySamples = 0;\n        Σ.refs.splaySumOfSquaredPauses = 0;\n        Σ_6.refs.length = Σ_6.refs.keys.length;\n        if (Σ_6.refs.length != Σ.refs.kSplayTreeSize) {\n            throw new Error('Splay tree has wrong size');\n        }\n        for (Σ_6.refs.i = 0; Σ_6.refs.i < Σ_6.refs.length - 1; Σ_6.refs.i++) {\n            if (Σ_6.refs.keys[Σ_6.refs.i] >= Σ_6.refs.keys[Σ_6.refs.i + 1]) {\n                throw new Error('Splay tree not sorted');\n            }\n        }\n    }",
            "protects": "Σ",
            "proto": {
                "type": "SplayTearDown",
                "proto_uri": "Σ/SplayTearDown",
                "value": {}
            },
            "properties": {}
        },
        "SplayRun": {
            "type": "Function",
            "value": "function SplayRun() {\n        var Σ_7 = new Σ.Scope(this, SplayRun, '7', Σ, {}, []);\n        for (Σ_7.refs.i = 0; Σ_7.refs.i < Σ.refs.kSplayTreeModifications; Σ_7.refs.i++) {\n            Σ_7.refs.key = Σ.refs.InsertNewNode();\n            Σ_7.refs.greatest = Σ.refs.splayTree.findGreatestLessThan(Σ_7.refs.key);\n            if (Σ_7.refs.greatest == null) {\n                Σ.refs.splayTree.remove(Σ_7.refs.key);\n            } else {\n                Σ.refs.splayTree.remove(Σ_7.refs.greatest.key);\n            };\n        }\n        Σ.refs.SplayUpdateStats(Σ.refs.performance.now());\n    }",
            "protects": "Σ",
            "proto": {
                "type": "SplayRun",
                "proto_uri": "Σ/SplayRun",
                "value": {}
            },
            "properties": {}
        },
        "SplayTree": {
            "type": "Function",
            "value": "function SplayTree() {\n        var Σ_8 = new Σ.Scope(this, SplayTree, '8', Σ, {}, []);\n    }",
            "protects": "Σ",
            "proto": {
                "type": "SplayTree",
                "proto_uri": "Σ/SplayTree",
                "value": {
                    "root_": null,
                    "isEmpty": {
                        "type": "Function",
                        "value": "Σ/α2Iuy.OeGuxr"
                    },
                    "insert": {
                        "type": "Function",
                        "value": "Σ/αNgNB.KfeZOG"
                    },
                    "remove": {
                        "type": "Function",
                        "value": "Σ/αggjP.W7J0AA"
                    },
                    "find": {
                        "type": "Function",
                        "value": "Σ/α7WcO.7Sf8DZ"
                    },
                    "findMax": {
                        "type": "Function",
                        "value": "Σ/αXJyG.r5HNEu"
                    },
                    "findGreatestLessThan": {
                        "type": "Function",
                        "value": "Σ/αIkhF.gZsmCo"
                    },
                    "exportKeys": {
                        "type": "Function",
                        "value": "Σ/αJOZ4.NBRiK2"
                    },
                    "splay_": {
                        "type": "Function",
                        "value": "Σ/αeVIv.Ypo2mw"
                    }
                }
            },
            "properties": {
                "Node": {
                    "type": "Function",
                    "value": "Σ/αuUOY.ijA0DO"
                }
            }
        },
        "BM_Start": {
            "type": "Function",
            "value": "function BM_Start() {\n        var Σ_20 = new Σ.Scope(this, BM_Start, '20', Σ, {}, [\n            [\n                doRun,\n                Σ_20\n            ]\n        ]);\n        Σ_20.refs.data = {\n            runs: 0,\n            elapsed: 0\n        };\n        Σ_20.refs.elapsed = 0;\n        Σ_20.refs.start = Date.now();\n        Σ_20.refs.end = null;\n        Σ_20.refs.i = 0;\n\n        function doRun() {\n            var Σ_20_0 = new Σ.Scope(this, doRun, '0', Σ_20, {}, []);\n            Σ.refs.BM_SetupFunc();\n            Σ.log('Iteration : ' + Σ_20.refs.i);\n            if (Σ_20.refs.i === Σ.refs.BM_Iterations / 2){\n                process.send({ ctrl: 'ready' })\n            }\n            Σ.refs.BM_RunFunc();\n            Σ_20.refs.elapsed = Date.now() - Σ_20.refs.start;\n            Σ.refs.BM_TearDownFunc();\n            Σ_20.refs.i++;\n            if (Σ_20.refs.i < Σ.refs.BM_Iterations) {\n                Σ.setImmediate(Σ_20.refs.doRun);\n            } else {\n                if (Σ_20.refs.data != null) {\n                    Σ_20.refs.data.runs += Σ_20.refs.i;\n                    Σ_20.refs.data.elapsed += Σ_20.refs.elapsed;\n                }\n                Σ.log('Runs: ' + Σ_20.refs.data.runs + '\\t|\\tElapsed: ' + Σ_20.refs.data.elapsed);\n                Σ_20.refs.end = Date.now();\n                Σ.log('Total time : ' + (Σ_20.refs.end - Σ_20.refs.start) + ' ms');\n                Σ_20_0.refs.usec = Σ_20.refs.data.elapsed * 1000 / Σ_20.refs.data.runs;\n                Σ_20_0.refs.rms = Σ.refs.BM_RMS ? Σ.refs.BM_RMS() : 0;\n                Σ.refs.BM_Results.push({\n                    time: Σ_20_0.refs.usec,\n                    latency: Σ_20_0.refs.rms\n                });\n            }\n        }\n        Σ.setImmediate(Σ_20.refs.doRun);\n    }",
            "protects": "Σ",
            "proto": {
                "type": "BM_Start",
                "proto_uri": "Σ/BM_Start",
                "value": {}
            },
            "properties": {}
        },
        "α2Iuy.OeGuxr": {
            "type": "Function",
            "value": "function α2Iuy() {\n        var Σ_9 = new Σ.Scope(this, α2Iuy, '9', Σ, {}, []);\n        return !this.root_;\n    }",
            "protects": "Σ",
            "proto": {
                "type": "α2Iuy",
                "proto_uri": "Σ/α2Iuy.OeGuxr",
                "value": {}
            },
            "properties": {}
        },
        "αNgNB.KfeZOG": {
            "type": "Function",
            "value": "function αNgNB(key, value) {\n        var Σ_10 = new Σ.Scope(this, αNgNB, '10', Σ, {\n            key: key,\n            value: value\n        }, []);\n        if (this.isEmpty()) {\n            this.root_ = new Σ.refs.SplayTree.Node(Σ_10.refs.key, Σ_10.refs.value);\n            return;\n        }\n        this.splay_(Σ_10.refs.key);\n        if (this.root_.key == Σ_10.refs.key) {\n            return;\n        }\n        Σ_10.refs.node = new Σ.refs.SplayTree.Node(Σ_10.refs.key, Σ_10.refs.value);\n        if (Σ_10.refs.key > this.root_.key) {\n            Σ_10.refs.node.left = this.root_;\n            Σ_10.refs.node.right = this.root_.right;\n            this.root_.right = null;\n        } else {\n            Σ_10.refs.node.right = this.root_;\n            Σ_10.refs.node.left = this.root_.left;\n            this.root_.left = null;\n        }\n        this.root_ = Σ_10.refs.node;\n    }",
            "protects": "Σ",
            "proto": {
                "type": "αNgNB",
                "proto_uri": "Σ/αNgNB.KfeZOG",
                "value": {}
            },
            "properties": {}
        },
        "αggjP.W7J0AA": {
            "type": "Function",
            "value": "function αggjP(key) {\n        var Σ_11 = new Σ.Scope(this, αggjP, '11', Σ, {\n            key: key\n        }, []);\n        if (this.isEmpty()) {\n            throw Error('Key not found: ' + Σ_11.refs.key);\n        }\n        this.splay_(Σ_11.refs.key);\n        if (this.root_.key != Σ_11.refs.key) {\n            throw Error('Key not found: ' + Σ_11.refs.key);\n        }\n        Σ_11.refs.removed = this.root_;\n        if (!this.root_.left) {\n            this.root_ = this.root_.right;\n        } else {\n            Σ_11.refs.right = this.root_.right;\n            this.root_ = this.root_.left;\n            this.splay_(Σ_11.refs.key);\n            this.root_.right = Σ_11.refs.right;\n        }\n        return Σ_11.refs.removed;\n    }",
            "protects": "Σ",
            "proto": {
                "type": "αggjP",
                "proto_uri": "Σ/αggjP.W7J0AA",
                "value": {}
            },
            "properties": {}
        },
        "α7WcO.7Sf8DZ": {
            "type": "Function",
            "value": "function α7WcO(key) {\n        var Σ_12 = new Σ.Scope(this, α7WcO, '12', Σ, {\n            key: key\n        }, []);\n        if (this.isEmpty()) {\n            return null;\n        }\n        this.splay_(Σ_12.refs.key);\n        return this.root_.key == Σ_12.refs.key ? this.root_ : null;\n    }",
            "protects": "Σ",
            "proto": {
                "type": "α7WcO",
                "proto_uri": "Σ/α7WcO.7Sf8DZ",
                "value": {}
            },
            "properties": {}
        },
        "αXJyG.r5HNEu": {
            "type": "Function",
            "value": "function αXJyG(opt_startNode) {\n        var Σ_13 = new Σ.Scope(this, αXJyG, '13', Σ, {\n            opt_startNode: opt_startNode\n        }, []);\n        if (this.isEmpty()) {\n            return null;\n        }\n        Σ_13.refs.current = Σ_13.refs.opt_startNode || this.root_;\n        while (Σ_13.refs.current.right) {\n            Σ_13.refs.current = Σ_13.refs.current.right;\n        }\n        return Σ_13.refs.current;\n    }",
            "protects": "Σ",
            "proto": {
                "type": "αXJyG",
                "proto_uri": "Σ/αXJyG.r5HNEu",
                "value": {}
            },
            "properties": {}
        },
        "αIkhF.gZsmCo": {
            "type": "Function",
            "value": "function αIkhF(key) {\n        var Σ_14 = new Σ.Scope(this, αIkhF, '14', Σ, {\n            key: key\n        }, []);\n        if (this.isEmpty()) {\n            return null;\n        }\n        this.splay_(Σ_14.refs.key);\n        if (this.root_.key < Σ_14.refs.key) {\n            return this.root_;\n        } else if (this.root_.left) {\n            return this.findMax(this.root_.left);\n        } else {\n            return null;\n        }\n    }",
            "protects": "Σ",
            "proto": {
                "type": "αIkhF",
                "proto_uri": "Σ/αIkhF.gZsmCo",
                "value": {}
            },
            "properties": {}
        },
        "αJOZ4.NBRiK2": {
            "type": "Function",
            "value": "function αJOZ4() {\n        var Σ_15 = new Σ.Scope(this, αJOZ4, '15', Σ, {}, []);\n        Σ_15.refs.result = [];\n        if (!this.isEmpty()) {\n            this.root_.traverse_(Σ_15.addFunction(function αK6Tr(node) {\n                var Σ_15_0 = new Σ.Scope(this, αK6Tr, '0', Σ_15, {\n                    node: node\n                }, []);\n                Σ_15.refs.result.push(Σ_15_0.refs.node.key);\n            }, Σ_15));\n        }\n        return Σ_15.refs.result;\n    }",
            "protects": "Σ",
            "proto": {
                "type": "αJOZ4",
                "proto_uri": "Σ/αJOZ4.NBRiK2",
                "value": {}
            },
            "properties": {}
        },
        "αeVIv.Ypo2mw": {
            "type": "Function",
            "value": "function αeVIv(key) {\n        var Σ_16 = new Σ.Scope(this, αeVIv, '16', Σ, {\n            key: key\n        }, []);\n        if (this.isEmpty()) {\n            return;\n        }\n        Σ_16.refs.dummy = undefined, Σ_16.refs.left = undefined, Σ_16.refs.right = undefined;\n        Σ_16.refs.dummy = Σ_16.refs.left = Σ_16.refs.right = new Σ.refs.SplayTree.Node(null, null);\n        Σ_16.refs.current = this.root_;\n        while (true) {\n            if (Σ_16.refs.key < Σ_16.refs.current.key) {\n                if (!Σ_16.refs.current.left) {\n                    break;\n                }\n                if (Σ_16.refs.key < Σ_16.refs.current.left.key) {\n                    Σ_16.refs.tmp = Σ_16.refs.current.left;\n                    Σ_16.refs.current.left = Σ_16.refs.tmp.right;\n                    Σ_16.refs.tmp.right = Σ_16.refs.current;\n                    Σ_16.refs.current = Σ_16.refs.tmp;\n                    if (!Σ_16.refs.current.left) {\n                        break;\n                    }\n                }\n                Σ_16.refs.right.left = Σ_16.refs.current;\n                Σ_16.refs.right = Σ_16.refs.current;\n                Σ_16.refs.current = Σ_16.refs.current.left;\n            } else if (Σ_16.refs.key > Σ_16.refs.current.key) {\n                if (!Σ_16.refs.current.right) {\n                    break;\n                }\n                if (Σ_16.refs.key > Σ_16.refs.current.right.key) {\n                    Σ_16.refs.tmp = Σ_16.refs.current.right;\n                    Σ_16.refs.current.right = Σ_16.refs.tmp.left;\n                    Σ_16.refs.tmp.left = Σ_16.refs.current;\n                    Σ_16.refs.current = Σ_16.refs.tmp;\n                    if (!Σ_16.refs.current.right) {\n                        break;\n                    }\n                }\n                Σ_16.refs.left.right = Σ_16.refs.current;\n                Σ_16.refs.left = Σ_16.refs.current;\n                Σ_16.refs.current = Σ_16.refs.current.right;\n            } else {\n                break;\n            }\n        }\n        Σ_16.refs.left.right = Σ_16.refs.current.left;\n        Σ_16.refs.right.left = Σ_16.refs.current.right;\n        Σ_16.refs.current.left = Σ_16.refs.dummy.right;\n        Σ_16.refs.current.right = Σ_16.refs.dummy.left;\n        this.root_ = Σ_16.refs.current;\n    }",
            "protects": "Σ",
            "proto": {
                "type": "αeVIv",
                "proto_uri": "Σ/αeVIv.Ypo2mw",
                "value": {}
            },
            "properties": {}
        },
        "αuUOY.ijA0DO": {
            "type": "Function",
            "value": "function αuUOY(key, value) {\n        var Σ_17 = new Σ.Scope(this, αuUOY, '17', Σ, {\n            key: key,\n            value: value\n        }, []);\n        this.key = Σ_17.refs.key;\n        this.value = Σ_17.refs.value;\n    }",
            "protects": "Σ",
            "proto": {
                "type": "αuUOY",
                "proto_uri": "Σ/αuUOY.ijA0DO",
                "value": {}
            },
            "properties": {}
        },
        "αd1xm.sE2mxm": {
            "type": "Function",
            "value": "function αd1xm(f) {\n        var Σ_18 = new Σ.Scope(this, αd1xm, '18', Σ, {\n            f: f\n        }, []);\n        Σ_18.refs.current = this;\n        while (Σ_18.refs.current) {\n            Σ_18.refs.left = Σ_18.refs.current.left;\n            if (Σ_18.refs.left) {\n                Σ_18.refs.left.traverse_(Σ_18.refs.f);\n            }\n            Σ_18.refs.f(Σ_18.refs.current);\n            Σ_18.refs.current = Σ_18.refs.current.right;\n        }\n    }",
            "protects": "Σ",
            "proto": {
                "type": "αd1xm",
                "proto_uri": "Σ/αd1xm.sE2mxm",
                "value": {}
            },
            "properties": {}
        },
        "αMb8u.f4j4Gp": {
            "type": "Function",
            "value": "function αMb8u() {\n        var Σ_19 = new Σ.Scope(this, αMb8u, '19', Σ, {}, []);\n        return Date.now();\n    }",
            "protects": "Σ",
            "proto": {
                "type": "αMb8u",
                "proto_uri": "Σ/αMb8u.f4j4Gp",
                "value": {}
            },
            "properties": {}
        }
    },
    "refs": {
        "GeneratePayloadTree": {
            "type": "Function",
            "value": "Σ/GeneratePayloadTree"
        },
        "GenerateKey": {
            "type": "Function",
            "value": "Σ/GenerateKey"
        },
        "SplayRMS": {
            "type": "Function",
            "value": "Σ/SplayRMS"
        },
        "SplayUpdateStats": {
            "type": "Function",
            "value": "Σ/SplayUpdateStats"
        },
        "InsertNewNode": {
            "type": "Function",
            "value": "Σ/InsertNewNode"
        },
        "SplaySetup": {
            "type": "Function",
            "value": "Σ/SplaySetup"
        },
        "SplayTearDown": {
            "type": "Function",
            "value": "Σ/SplayTearDown"
        },
        "SplayRun": {
            "type": "Function",
            "value": "Σ/SplayRun"
        },
        "SplayTree": {
            "type": "Function",
            "value": "Σ/SplayTree"
        },
        "BM_Start": {
            "type": "Function",
            "value": "Σ/BM_Start"
        },
        "kSplayTreeSize": 1000,
        "kSplayTreeModifications": 10,
        "kSplayTreePayloadDepth": 3,
        "splayTree": null,
        "splaySampleTimeStart": 1523560319521,
        "splaySamples": 0,
        "splaySumOfSquaredPauses": 0,
        "performance": {
            "type": "Object",
            "value": {
                "now": {
                    "type": "Function",
                    "value": "Σ/αMb8u.f4j4Gp"
                }
            }
        },
        "BM_RunFunc": {
            "type": "things-js.reference",
            "uri": "Σ.refs.SplayRun"
        },
        "BM_SetupFunc": {
            "type": "things-js.reference",
            "uri": "Σ.refs.SplaySetup"
        },
        "BM_TearDownFunc": {
            "type": "things-js.reference",
            "uri": "Σ.refs.SplayTearDown"
        },
        "BM_RMS": {
            "type": "things-js.reference",
            "uri": "Σ.refs.SplayRMS"
        },
        "BM_Iterations": 100,
        "BM_Min_Iterations": 16,
        "BM_Results": []
    },
    "children": {
        "20_uVX7": {
            "id": "20",
            "uid": "20_uVX7",
            "func_name": "BM_Start",
            "params": {},
            "hoisted": {
                "doRun": "doRun"
            },
            "funcs": {
                "doRun": {
                    "type": "Function",
                    "value": "function doRun() {\n            var Σ_20_0 = new Σ.Scope(this, doRun, '0', Σ_20, {}, []);\n            Σ.refs.BM_SetupFunc();\n            Σ.log('Iteration : ' + Σ_20.refs.i);\n            if (Σ_20.refs.i === Σ.refs.BM_Iterations / 2){\n                process.send({ ctrl: 'ready' })\n            }\n            Σ.refs.BM_RunFunc();\n            Σ_20.refs.elapsed = Date.now() - Σ_20.refs.start;\n            Σ.refs.BM_TearDownFunc();\n            Σ_20.refs.i++;\n            if (Σ_20.refs.i < Σ.refs.BM_Iterations) {\n                Σ.setImmediate(Σ_20.refs.doRun);\n            } else {\n                if (Σ_20.refs.data != null) {\n                    Σ_20.refs.data.runs += Σ_20.refs.i;\n                    Σ_20.refs.data.elapsed += Σ_20.refs.elapsed;\n                }\n                Σ.log('Runs: ' + Σ_20.refs.data.runs + '\\t|\\tElapsed: ' + Σ_20.refs.data.elapsed);\n                Σ_20.refs.end = Date.now();\n                Σ.log('Total time : ' + (Σ_20.refs.end - Σ_20.refs.start) + ' ms');\n                Σ_20_0.refs.usec = Σ_20.refs.data.elapsed * 1000 / Σ_20.refs.data.runs;\n                Σ_20_0.refs.rms = Σ.refs.BM_RMS ? Σ.refs.BM_RMS() : 0;\n                Σ.refs.BM_Results.push({\n                    time: Σ_20_0.refs.usec,\n                    latency: Σ_20_0.refs.rms\n                });\n            }\n        }",
                    "protects": "Σ_20",
                    "proto": {
                        "type": "doRun",
                        "proto_uri": "Σ/20_uVX7/doRun",
                        "value": {}
                    },
                    "properties": {}
                }
            },
            "refs": {
                "doRun": {
                    "type": "Function",
                    "value": "Σ/20_uVX7/doRun"
                },
                "data": {
                    "type": "Object",
                    "value": {
                        "runs": 0,
                        "elapsed": 0
                    }
                },
                "elapsed": 7855,
                "start": 1523560311666,
                "end": null,
                "i": 51
            },
            "children": {}
        }
    }
}